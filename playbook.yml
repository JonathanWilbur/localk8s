---
- name: Common Configuration
  hosts: "*"
  vars:
    ssh_public_keys:
      - comment: "Home Desktop Public Key"
        key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDPUOa0+zQzDOCCHDOB++XHIFpOmkoIknABMeInPV83MMJwnu+aSaB6fIlmSmdva6ivCKflM45DfdB6JhHNDMJc/E5HP7qpE9M3g9PD3XbuafBDbpCHysfJC9p1QMxMBzlX8RiUC+g6u1S8WLV4vdjEYTwDldr34C/fuk+43FOSXvG0DoxiGik5KAEwdoZsy+IcTxhL0bZF7YlePh8Mhx8ABMylvgfpas2PRtwbs0LCWH+7sqMLH+H+kZnnSUxP7MsDrhMXiPPgW5SFZe1lPrrV+t0o9bk3KKArS7IN46fcUoV6Gkf7MdZCkAiXCfOWe4ONjH/A1b2pT0DAgGnp/GLN"
      - comment: "Laptop Public Key"
        key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC9+LhmchErX29/bRWessCTwDW2hPdwW31y4d8MDJudQZd0xJqY+womSj3uSVzIEnFTY+a4HKWKnH1bAO1wtIDurELG5qPorsVbPG/1Imw+3KJVkVYml5q1K9MCmFtrzNO18r8I5KN6/BgZcjMmherFtYF681R7d7MLw4o1Zt5+5OXVE5CIeJjtoC+x7/PN1baGnFEudh8rns/JQaWz4zvU87hf3QNWRvhaA87XlQ01fkRyar5wIHv6lPz5FpiyTpkVAPiT0zaGTWw3Iu2cxsT0sqBIXDOPDNcjegiUjLMvTUuGkIShR6/rdlOBNsiHVNtUIxggvTUKPypa+0XhGxWflhy3vh/dby1q9HPJUTu0LPBugSOMhLFBiLVzUkFgRoalzeMgVjE8gE5Fvyv+2xpVVu6qGF23IXhxNFeKUrwfcUyI44YLDRWc4Am82lHs8W4ABq6J327tCpzi2WdYW1sdzZzTjh3CInr2R+gMvXxoj54X1UefjuKLehBr2bBIAM+U5ZI/CZf6NS1svF8S8hdUzVYqr4bRMmrhy5o+VL6eJUeSsYDYHlqc7ilIrRUV1qvpSvL7bAyfbKrO1TlHRRy/MYoVJj7DR2HCJVsWraIJI7L0swUiH75qAFN0F3f9hSwQviyk1hlPkA1XElKCjn4As2SV8e3pvGiYUrVyC7hasw== jonathan@wilbur.space"
  tasks:
    - name: Set Timezone
      timezone:
        name: America/New_York
    - name: Configure OpenSSH
      ansible.builtin.copy:
        content: "{{ lookup('file', 'configuration/sshd_config') }}"
        dest: /etc/ssh/sshd_config
    - name: Install SSH Public Keys
      authorized_key:
        user: ubuntu
        key: "{{ item.key }}"
        comment : "{{ item.comment }}"
        path: /home/ubuntu/.ssh/authorized_keys
        state: present
      loop: "{{ ssh_public_keys }}"
    - name: Enable SSH Daemon
      ansible.builtin.systemd:
        name: ssh
        enabled: yes
        state: restarted
    - name: Install secure-delete APT Package
      apt:
        name: secure-delete
        update_cache: yes
        state: latest
    - name: Install hexyl APT Package
      apt:
        name: hexyl
        update_cache: yes
        state: latest
    # I think SystemD already has this built-in.
    - name: Block metrics.ubuntu.com
      ansible.builtin.lineinfile:
        dest: /etc/hosts
        line: "0.0.0.0 metrics.ubuntu.com"
        state: present
    - name: Block daisy.ubuntu.com
      ansible.builtin.lineinfile:
        dest: /etc/hosts
        line: "0.0.0.0 daisy.ubuntu.com"
        state: present
    - name: Block popcon.ubuntu.com
      ansible.builtin.lineinfile:
        dest: /etc/hosts
        line: "0.0.0.0 popcon.ubuntu.com"
        state: present
    # Source: https://askubuntu.com/questions/1027532/how-to-opt-out-of-system-information-reports
    - name: Purge ubuntu-report
      apt:
        name: ubuntu-report
        purge: yes
        state: absent
    - name: Purge popularity-contest
      apt:
        name: popularity-contest
        purge: yes
        state: absent
    - name: Purge apport
      apt:
        name: apport
        purge: yes
        state: absent
    - name: Purge whoopsie
      apt:
        name: whoopsie
        purge: yes
        state: absent
    - name: Purge avahi-daemon
      apt:
        name: avahi-daemon
        purge: yes
        state: absent
    - name: Ensure ASLR
      sysctl:
        name: kernel.randomize_va_space
        value: "1"
    - name: Periodically delete command history
      ansible.builtin.cron:
        name: Delete command history
        job: "rm /home/ubuntu/.bash_history"
        special_time: weekly
        state: present
    - name: Automatically logout users
      ansible.builtin.lineinfile:
        dest: /etc/profile
        regexp: '^(\s*)TMOUT='
        line: '\1TMOUT=1200'
        state: present
        backrefs: yes

- name: File Server Configuration
  hosts: fileservers
  tasks:
    - name: Install mdadm APT Package
      apt:
        name: mdadm
        update_cache: yes
        state: latest
    - name: "Install NFS Kernel Server"
      apt:
        name: nfs-kernel-server
        update_cache: yes
        state: latest
    - name: Install GlusterFS Server
      apt:
        name: glusterfs-server
        update_cache: yes
        state: latest
    - name: Enable and Start GlusterFS Daemon
      ansible.builtin.systemd:
        name: glusterd
        enabled: yes
        state: started
    - name: Download Heketi
      unarchive:
        src: https://github.com/heketi/heketi/releases/download/v10.1.0/heketi-client-v10.1.0.linux.arm64.tar.gz
        dest: /home/ubuntu
        remote_src: yes
    - name: Copy file with owner and permissions
      copy:
        src: /home/ubuntu/heketi-client/bin/heketi-cli
        dest: /usr/local/bin/heketi-cli
        mode: '0644'
        remote_src: yes
    - name: Create /var/lib/heketi directory
      file:
        path: /var/lib/heketi
        state: directory
        mode: '0755'
    - name: Create /var/log/heketi directory
      file:
        path: /var/log/heketi
        state: directory
        mode: '0755'
    - name: Create /etc/heketi directory
      file:
        path: /etc/heketi
        state: directory
        mode: '0755'
    - name: Configure Heketi
      ansible.builtin.copy:
        content: "{{ lookup('file', 'configuration/heketi.json') }}"
        dest: /etc/heketi/heketi.json
    - name: Create Heketi User
      ansible.builtin.user:
        name: heketi
        comment: Heketi System Account
        system: yes
        shell: /sbin/nologin
        state: present
    - name: Configure HEKETI_CLI_SERVER environment variable
      ansible.builtin.lineinfile:
        dest: /home/ubuntu/.profile
        line: "export HEKETI_CLI_SERVER=http://k8s-file1.local:8080"
        state: present
    - name: Configure HEKETI_CLI_USER environment variable
      ansible.builtin.lineinfile:
        dest: /home/ubuntu/.profile
        line: "export HEKETI_CLI_USER=admin"
        state: present
    - name: Configure HEKETI_CLI_KEY environment variable
      ansible.builtin.lineinfile:
        dest: /home/ubuntu/.profile
        line: 'export HEKETI_CLI_KEY="mAqo1A4R4qlEXgMY"'
        state: present
    - name: Configure Heketi SystemD Service
      ansible.builtin.copy:
        content: "{{ lookup('file', 'configuration/heketi.service') }}"
        dest: /etc/systemd/system/heketi.service

- name: Kubernetes Common Configuration
  hosts: localk8s
  tasks:
    - name: Load br_netfilter
      modprobe:
        name: br_netfilter
        state: present
    - name: Enable IPTables to see bridged IPv4 traffic
      sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: "1"
    - name: Enable IPTables to see bridged IPv6 traffic
      sysctl:
        name: net.bridge.bridge-nf-call-ip6tables
        value: "1"
    - name: Enable IPv4 Forwarding
      sysctl:
        name: net.ipv4.ip_forward
        value: "1"
    - name: Enable IPv6 Forwarding
      sysctl:
        name: net.ipv6.conf.all.forwarding
        value: "1"
    - name: Configure Routing
      shell: ufw default allow routed
    - name: Enable cgroups
      ansible.builtin.copy:
        content: "{{ lookup('file', 'configuration/cmdline.txt') }}"
        dest: /boot/firmware/cmdline.txt
    - name: Install microk8s snap
      snap:
        name: microk8s
        classic: yes
        state: present
        # I had catastrophically high CPU usage with 1.19. 1.18 works.
        channel: "1.18/stable"
    - name: Set File Descriptor Limits for Microk8s
      ansible.builtin.lineinfile:
        dest: /var/snap/microk8s/current/args/containerd-env
        line: "ulimit -n 65536"
        state: present
    - name: Install GlusterFS Client
      apt:
        name: glusterfs-client
        update_cache: yes
        state: latest
    - name: Start Microk8s
      shell: microk8s start

- name: Kubernetes Master Configuration
  hosts: masters
  tasks:
    - name: Enable DNS
      shell: microk8s enable dns
    - name: Enable Dashboard
      shell: microk8s enable dashboard
    - name: Enable Registry
      shell: microk8s enable registry
    - name: Enable Helm 3
      shell: microk8s enable helm3
    - name: Create storage namespace
      k8s:
        name: storage
        api_version: v1
        kind: Namespace
        state: present
    - name: Create OpenFaaS administrative namespace
      k8s:
        name: openfaas
        api_version: v1
        kind: Namespace
        state: present
    - name: Create OpenFaaS functions namespace
      k8s:
        name: openfaas-fn
        api_version: v1
        kind: Namespace
        state: present
    - name: Create Heketi Secret
      k8s:
        state: present
        src: k8s/heketi.secret.yaml
    - name: Create Heketi / GlusterFS StorageClass
      k8s:
        state: present
        src: k8s/heketi.sc.yaml