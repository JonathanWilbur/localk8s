---
- name: Common Configuration
  hosts: "*"
  vars:
    dnscrypt_listen_address: "127.0.2.1"
    dnscrypt_listen_port: 53
  tasks:
    - name: Set Timezone
      timezone:
        name: America/New_York
    - name: Prohibit Password Authentication to SSH
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^\s*PasswordAuthentication'
        line: PasswordAuthentication no
    - name: Enable SSH Daemon
      ansible.builtin.systemd:
        name: ssh
        enabled: yes
        state: reloaded
    - name: Install secure-delete APT Package
      apt:
        name: secure-delete
        update_cache: yes
        state: latest
    - name: Install hexyl APT Package
      apt:
        name: hexyl
        update_cache: yes
        state: latest
    - name: Install avahi-daemon APT Package
      apt:
        name: avahi-daemon
        update_cache: yes
        state: latest
    - name: Get the NordVPN Repository Debian File
      ansible.builtin.get_url:
        url: https://repo.nordvpn.com/deb/nordvpn/debian/pool/main/nordvpn-release_1.0.0_all.deb
        dest: /tmp/nordvpn.deb
      ignore_errors: yes # This fails sometimes, but unless it fails the first time, it is not a problem.
    - name: Install NordVPN Repository from the Debian File
      ansible.builtin.apt:
        deb: /tmp/nordvpn.deb
    - name: Install NordVPN
      apt:
        name: nordvpn
        update_cache: yes
        state: present
    - name: Make sure dnsmasq is not installed
      apt:
        name: dnsmasq
        state: absent
    - name: Install DNSCrypt Proxy
      apt:
        name: dnscrypt-proxy
        update_cache: yes
        state: present
    # Source: https://github.com/Ultimate-Hosts-Blacklist/Ultimate.Hosts.Blacklist
    - name: Download the Hosts Blacklist
      ansible.builtin.get_url:
        url: https://hosts.ubuntu101.co.za/domains.list
        dest: /etc/dnscrypt-proxy/dns.blacklist
    - name: Block metrics.ubuntu.com
      ansible.builtin.lineinfile:
        dest: /etc/dnscrypt-proxy/dns.blacklist
        line: "metrics.ubuntu.com"
        state: present
    - name: Block popcon.ubuntu.com
      ansible.builtin.lineinfile:
        dest: /etc/dnscrypt-proxy/dns.blacklist
        line: "popcon.ubuntu.com"
        state: present
    - name: Configure DNSCrypt Proxy
      ansible.builtin.copy:
        src: /home/pi/localk8s/configuration/dnscrypt-proxy.toml
        dest: /etc/dnscrypt-proxy/dnscrypt-proxy.toml
    # Source: https://pimylifeup.com/raspberry-pi-dns-settings/
    - name: Configure DNSCrypt Proxy to be the DNS Resolver
      ansible.builtin.lineinfile:
        dest: /etc/dhcpcd.conf
        regexp: '^\s*static domain_name_servers='
        line: "static domain_name_servers={{ dnscrypt_listen_address }}"
        state: present
    - name: Enable Ethernet Jumbo Frames
      ansible.builtin.lineinfile:
        dest: /etc/dhcpcd.conf
        regexp: '^\s*option interface-mtu'
        line: "option interface-mtu 9000;"
        state: present
    - name: Enable and Restart DHCP Client Daemon
      ansible.builtin.systemd:
        name: dhcpcd
        enabled: yes
        state: restarted
    - name: Enable and Restart Networking
      ansible.builtin.systemd:
        name: networking
        enabled: yes
        state: restarted
    - name: Enable and Restart DNSCrypt Proxy Daemon
      ansible.builtin.systemd:
        name: dnscrypt-proxy
        enabled: yes
        state: restarted
    # Source: https://askubuntu.com/questions/1027532/how-to-opt-out-of-system-information-reports
    - name: Purge ubuntu-report
      apt:
        name: ubuntu-report
        purge: yes
        state: absent
    - name: Purge popularity-contest
      apt:
        name: popularity-contest
        purge: yes
        state: absent
    - name: Purge apport
      apt:
        name: apport
        purge: yes
        state: absent
    - name: Purge whoopsie
      apt:
        name: whoopsie
        purge: yes
        state: absent
    - name: Ensure ASLR
      sysctl:
        name: kernel.randomize_va_space
        value: "1"
    # Not valid on all systems.
    # - name: Ensure ExecShield
    #   sysctl:
    #     name: kernel.exec-shield
    #     value: "1"
    - name: Disable IP Forwarding
      sysctl:
        name: net.ipv4.ip_forward
        value: "0"
    - name: Periodically delete command history
      ansible.builtin.cron:
        name: Delete command history
        job: "rm /home/pi/.bash_history"
        special_time: weekly
        state: present


- name: Storage Server Configuration
  hosts: k8s-storage1
  vars:
    stores:
      - device: /dev/sda
        fs: xfs
        mount: /mnt/store01
      - device: /dev/sdb
        fs: xfs
        mount: /mnt/store02
  tasks:
    - name: Install mdadm APT Package
      apt:
        name: mdadm
        update_cache: yes
        state: latest
    - name: "Create USB Drive Partition {{ store.device }}1"
      parted:
        device: "{{ store.device }}"
        number: 1
        state: present
        fs_type: "{{ store.fs }}"
      loop: "{{ stores }}"
    - name: "Format USB Drive Partition {{ store.device }}1 as XFS"
      filesystem:
        fstype: "{{ store.fs }}"
        dev: "{{ store.device }}1"
      loop: "{{ stores }}"
    - name: "Auto-Mount USB Drive Partition {{ store.device }} 1"
      mount:
        path: "{{ store.mount }}"
        src: "{{ store.device }}1"
        fstype: "{{ store.fs }}"
        state: present
      loop: "{{ stores }}"
    - name: Periodically zero freed storage
      ansible.builtin.cron:
        name: "Zero Freed Storage on {{ store.mount }}"
        job: "sfill -lf {{ store.mount }}"
        special_time: monthly
        state: present


- name: Kubernetes Common Configuration
  hosts: k8s-*
  tasks:
    - name: Install microk8s snap
      snap:
        name: microk8s
        classic: yes
        state: present
    - name: Wait until microK8s is running
      ansible.builtin.command:
        cmd: microk8s status --wait-ready
    - name: Enable DNS
      ansible.builtin.command:
        cmd: microk8s enable dns
    - name: Enable Dashboard
      ansible.builtin.command:
        cmd: microk8s enable dashboard
    - name: Enable Registry
      ansible.builtin.command:
        cmd: microk8s enable registry
    - name: Enable Helm 3
      ansible.builtin.command:
        cmd: microk8s enable helm3
    - name: Get all namespaces
      ansible.builtin.command:
        cmd: microk8s kubectl get all --all-namespaces
    - name: Set File Descriptor Limits for Microk8s
      ansible.builtin.lineinfile:
        dest: /var/snap/microk8s/current/args/containerd-env
        line: "ulimit -n 65536"
        state: present
